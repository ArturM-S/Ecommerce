
## How to use

Execute [`create-next-app`](https://github.com/vercel/next.js/tree/canary/packages/create-next-app) with [npm](https://docs.npmjs.com/cli/init), [Yarn](https://yarnpkg.com/lang/en/docs/cli/create/), or [pnpm](https://pnpm.io) to bootstrap the example:

```bash
npx create-next-app --example with-emotion with-emotion-app
```

```bash
yarn create next-app --example with-emotion with-emotion-app
```

```bash
pnpm create next-app --example with-emotion with-emotion-app
```

Deploy it to the cloud with [Vercel](https://vercel.com/new?utm_source=github&utm_medium=readme&utm_campaign=next-example) ([Documentation](https://nextjs.org/docs/deployment)).



Challenge sayings:
Para executa a aplicação, roda o comando "npm install" e em seguida o comando "npm run dev";
Foi implementado o código de um ecommece simples para o desafio proposto;
A demanda de horário fez com que fosse escolhido prioritariamente o foco na funcionalidade, sendo a estilização aproximada que satisfizesse a UI desejada;
Todas as informações sobre os produtos foram retiradas de uma fake API https://fakestoreapi.com/;
A api utilizada não possuia informação de data de envio do produto, contudo, a logica para ordenação por data é muito semelhante as odenação por preço, evidenciado a tecnica requerida;

Ferramentas utilizadas:
Emotion styled components;
NextJS;
Axios;
TypeScript;
REST api https://fakestoreapi.com/
